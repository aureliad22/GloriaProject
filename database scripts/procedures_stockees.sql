-- =============================================
-- Author:		Aurélia Delauné
-- Create date: 01/08/2017
-- Description:	Stored procedure that returns the candidate's info 
-- whose login (or email) and password match the given parameters
-- =============================================
CREATE PROCEDURE AUTHENTICATE_CANDIDATE 
    @mail nvarchar,
    @login nvarchar,
    @password nvarchar
    
AS
BEGIN
    SELECT 
        id, 
        nom, 
        prenom, 
        email, 
        login, 
        idPromotion
    FROM
        stagiaires
    WHERE
        (email = @mail AND password = @password)
        OR
        (login = @login AND password = @password)
    RETURN
END

-- =============================================
-- Author:		GloriaProject
-- Create date: 02/08/2017
-- Description:	Stocked procedure that inserts a new promotion
-- with the given title and returns the autogenerated id.
-- =============================================
CREATE PROCEDURE ADD_PROMOTION 
	@libelle nvarchar(200)
AS
BEGIN
	INSERT INTO promotions(libelle)
	VALUES(@libelle)

	RETURN SCOPE_IDENTITY()
END

-- =============================================
-- Author:		GloriaProject
-- Create date: 02/08/2017
-- Description:	Stocked procedure that updates the promotion
-- with the given id.
-- =============================================
CREATE PROCEDURE MODIFY_PROMOTION
	@id int,
	@libelle nvarchar(200)
AS
BEGIN
	UPDATE 
		promotions
	SET
		libelle = @libelle
	WHERE 
		id = @id
END

-- =============================================
-- Author:		GloriaProject
-- Create date: 02/08/2017
-- Description:	Stocked procedure that deletes the promotion
-- with the given id.
-- =============================================
CREATE PROCEDURE DELETE_PROMOTION
	@id int
AS
BEGIN
	DELETE FROM promotions
	WHERE id=@id

END

-- =============================================
-- Author:		GloriaProject
-- Create date: 02/08/2017
-- Description:	Stocked procedure that return the promotion
-- with the given id.
-- =============================================
CREATE PROCEDURE FIND_BY_ID_PROMOTION 
	@id int
AS
BEGIN
	
	SELECT 
		id, libelle
	FROM 
		promotions
	WHERE 
		id = @id
END

-- =============================================
-- Author:		GloriaProject
-- Create date: 02/08/2017
-- Description:	Stocked procedure that return all the promotions
-- =============================================
CREATE PROCEDURE LIST_PROMOTIONS
	
AS
BEGIN
	SELECT
		*
	FROM
		promotions

END

-- =============================================
-- Author:		GloriaProject
-- Create date: 01/08/2017
-- Description:	Stocked procedure that inserts a new question 
-- with the given parameters into the database
-- and returns the autogenerated id.
-- =============================================
CREATE PROCEDURE ADD_QUESTION
	@enonce nvarchar(2000),
	@imageUri nvarchar(500),
	@poids nvarchar(500)
AS
BEGIN

	INSERT INTO questions (enonce,imageUri,poids)
    VALUES (@enonce, @imageUri,@poids)

	return SCOPE_IDENTITY()

END;

-- =============================================
-- Author:		GloriaProject
-- Create date: 01/08/2017
-- Description:	Stocked procedure that updates the question 
-- whose id corresponds to the given id. 
-- =============================================
CREATE PROCEDURE MODIFY_QUESTION
	@id int,
	@enonce nvarchar(2000),
	@imageUri nvarchar(500),
	@poids nvarchar(500)
AS
BEGIN

	UPDATE questions 
	SET 
		enonce = @enonce,
		imageUri = @imageUri,
		poids = @poids
	WHERE 
		id = @id

END;

-- =============================================
-- Author:		GloriaProject
-- Create date: 01/08/2017
-- Description:	Stocked procedure that deletes the question 
-- with the given id.
-- =============================================
CREATE PROCEDURE DELETE_QUESTION
	@id int
AS
BEGIN

	DELETE FROM questions
	WHERE id = @id

END;